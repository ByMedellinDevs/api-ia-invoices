version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: api_ia_invoices_db
    environment:
      POSTGRES_DB: api_ia_invoices_development
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - "5433:5432"
    networks:
      - api_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Rails API Application
  api:
    build:
      context: ./src
      dockerfile: Dockerfile
      target: development
    container_name: api_ia_invoices_app
    environment:
      RAILS_ENV: development
      DATABASE_URL: postgresql://postgres:password@db:5432/api_ia_invoices_development
      RAILS_MASTER_KEY: ${RAILS_MASTER_KEY}
      RAILS_LOG_TO_STDOUT: "1"
      RAILS_SERVE_STATIC_FILES: "true"
    volumes:
      - ./src:/rails
      - bundle_cache:/usr/local/bundle
      - rails_cache:/rails/tmp/cache
      - rails_storage:/rails/storage
    ports:
      - "3001:80"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - api_network
    stdin_open: true
    tty: true
    command: >
      bash -c "
        bundle install &&
        bundle exec rails db:create db:migrate db:seed &&
        bundle exec rails server -b 0.0.0.0 -p 80
      "

  # Nginx (reverse proxy for production)
  nginx:
    image: nginx:alpine
    container_name: api_ia_invoices_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
    networks:
      - api_network
    profiles:
      - production

  # Adminer (Database management tool)
  adminer:
    image: adminer:latest
    container_name: api_ia_invoices_adminer
    ports:
      - "8080:8080"
    depends_on:
      - db
    networks:
      - api_network
    profiles:
      - tools

volumes:
  postgres_data:
    driver: local
  bundle_cache:
    driver: local
  rails_cache:
    driver: local
  rails_storage:
    driver: local

networks:
  api_network:
    driver: bridge